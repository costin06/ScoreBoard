{"version":3,"sources":["componets/Counter.js","componets/Icon.js","componets/Player.js","shared/players.js","componets/Stats.js","componets/StopWatch.js","componets/Header.js","componets/AddPlayer.js","App.js","serviceWorker.js","index.js"],"names":["Counter","_this","this","react_default","a","createElement","className","onClick","props","changeScore","id","score","Component","Icon","state","viewBox","myfunc","d","transform","width","height","Player","console","log","isHighScore","componets_Icon","myMeth","playerName","componets_Counter","PLAYERS","name","Stats","totalScore","playersTot","forEach","el","players","StopWatch","totalTime","isRunning","handleStart","setState","_this2","timerID","setInterval","tick","clearInterval","Header","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componets_Stats","componets_StopWatch","AddPlayer","value","handleChange2","event","target","handleSubmit","preventDefault","addPlayer","onSubmit","type","onChange","App","removePlayer","e","prevState","filter","item","handleScoreChange","index","direction","map","toConsumableArray","concat","Math","max","apply","player","myPlayers","o","componets_Header","length","componets_Player","key","toString","idx","componets_AddPlayer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.62819b27.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\nclass Counter extends Component {\r\n   \r\n    render() { \r\n        return (\r\n        <div className=\"counter\">\r\n        <button onClick={() => this.props.changeScore(this.props.id,'decrement')} className=\"counter-action decrement\">-</button>\r\n        <span className=\"counter-score\">{this.props.score}</span>\r\n        <button onClick={() => this.props.changeScore(this.props.id,\"increment\")} className=\"counter-action increment\">+</button>\r\n      </div> );\r\n    }\r\n}\r\n \r\nexport default Counter;","\r\n    import React, { Component } from 'react';\r\n    class Icon extends Component {\r\n        state = {  }\r\n        render() { \r\n            return ( \r\n                <svg viewBox=\"0 0 44 35\" className={this.props.myfunc}>\r\n                  <path d=\"M26.7616 10.6207L21.8192 0L16.9973 10.5603C15.3699 14.1207 10.9096 15.2672 7.77534 12.9741L0 7.24138L6.56986 28.8448H37.0685L43.5781 7.72414L35.7425 13.0948C32.6685 15.2672 28.3288 14.0603 26.7616 10.6207Z\" transform=\"translate(0 0.301727)\"/>\r\n                  <rect width=\"30.4986\" height=\"3.07759\" transform=\"translate(6.56987 31.5603)\"/>\r\n                </svg>\r\n                 );\r\n        }\r\n    }\r\n     \r\n    export default Icon;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./Counter\";\r\n\r\nimport Icon from \"./Icon\"\r\n\r\n\r\nclass Player extends Component {\r\n  render() {\r\n    console.log(this.props.isHighScore());\r\n\r\n    return (\r\n      <div className=\"player\">\r\n        <span className=\"player-name\">\r\n\r\n      <Icon myfunc={ ()=>{\r\n\r\nif(this.props.isHighScore==true){return \"is-high-score\"};\r\n      }\r\n        \r\n                    \r\n\r\n\r\n      }/>\r\n          <button onClick={() => this.props.myMeth(this.props.id)} className=\"remove-player\">âœ–</button>\r\n          {this.props.playerName}\r\n        </span>\r\n        <Counter \r\n            score={this.props.score} \r\n            id={this.props.id}\r\n            changeScore={this.props.changeScore} \r\n            />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Player;\r\n","export const PLAYERS=[\r\n\r\n    {\r\n    \r\nid:0,\r\nname:\"Andrei\",\r\nscore:0\r\n},\r\n{\r\n    id:1,\r\n    name:\"Valentin\",\r\n    score:0\r\n\r\n\r\n},\r\n{\r\n    id:2,\r\n    name:\"Ionut\",\r\n    score:0\r\n\r\n\r\n},\r\n{\r\n    id:3,\r\n    name:\"David\",\r\n    score:0\r\n\r\n\r\n},\r\n\r\n\r\n\r\n\r\n]","import React, { Component } from 'react';\r\n\r\nclass Stats extends Component {\r\n    state = {  }\r\n    render() { \r\n        let totalScore = 0;\r\n    this.props.playersTot.forEach(el=> {\r\n      totalScore += el.score;\r\n    });\r\n        return ( \r\n            <table className=\"stats\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Players:</td>\r\n                  <td>{this.props.players}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Total Points:</td>\r\n                  <td>{totalScore}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table> );\r\n    }\r\n}\r\n \r\nexport default Stats;","import React, { Component } from 'react';\r\n\r\nclass StopWatch extends Component {\r\n  \r\n  state = {\r\n     totalTime:0,\r\n     isRunning:false  \r\n  }\r\n\r\n  handleStart = ()=>{    \r\n\r\n      if(this.state.isRunning===false){\r\n\r\n        this.setState(\r\n          {isRunning: false }\r\n          );\r\n    \r\n      }\r\n      else if(this.state.isRunning===true){\r\n\r\n        this.setState({isRunning:true});\r\n      }\r\n    \r\n\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.timerID = setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n  tick(){\r\n\r\n    this.setState({totalTime:this.state.totalTime+1})\r\n  }\r\n\r\n  componentWillUnmount(){\r\n    clearInterval(this.timerID);\r\n\r\n  }\r\n\r\n  render() { \r\n   \r\n   \r\n    return (  \r\n   \r\n      <div className=\"stopwatch\">\r\n      <h2>Stopwatch</h2>\r\n      <span className=\"stopwatch-time\">0</span>\r\n      <button onClick= {this.handleStart } >{this.state.isRunning?\"Stop\":\"Start\"}</button> \r\n      <button>Reset</button>\r\n    </div>\r\n\r\n\r\n    );\r\n  }\r\n}\r\n \r\nexport default StopWatch;","import React, { Component } from 'react';\r\nimport Stats from \"./Stats\";\r\nimport StopWatch from './StopWatch';\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n\r\n            name:''\r\n         }\r\n    }\r\n    render() { \r\n        return ( \r\n            <header>\r\n                <Stats\r\n                players={this.props.players}\r\n                playersTot={this.props.playersTot}\r\n                />\r\n                \r\n            <h1>Scoreboard</h1>\r\n\r\n            <StopWatch/>\r\n\r\n          </header>\r\n\r\n         );\r\n    }\r\n}\r\n \r\nexport default Header ;","import React, { Component } from 'react';\r\nclass AddPlayer extends Component {\r\n    state = { \r\n        value:''\r\n     }\r\n\r\n     handleChange2 = (event) => {\r\n        this.setState(  \r\n             {value: event.target.value}\r\n        );\r\n\r\n     }\r\n\r\n     handleSubmit=(event)=>{\r\n        event.preventDefault();\r\n        this.props.addPlayer(this.state.value);\r\n        this.setState({value:\"\"})\r\n\r\n      }\r\n    render() { \r\n        return ( \r\n            <form onSubmit={this.handleSubmit}>\r\n            \r\n            <input type='text' onChange={this.handleChange2} name=\"ddd\" value={this.state.value}></input>\r\n            <input type='submit' value=\"Add Player\"></input>\r\n        \r\n            </form>\r\n         );\r\n    }\r\n}\r\n \r\nexport default AddPlayer;","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Player from \"./componets/Player\";\nimport { PLAYERS } from \"./shared/players\";\nimport Header from \"./componets/Header\";\nimport AddPlayer from \"./componets/AddPlayer\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: PLAYERS\n     };\n  }\n\n\n\n\n  removePlayer = e => {\n    this.setState(prevState => ({\n      players: prevState.players.filter(item => item.id !== e)\n    }));\n  };\n\n  handleScoreChange = (index, direction) => {\n    if (direction === \"decrement\") {\n      this.setState({\n        players: this.state.players.map(item => {\n          if (item.id === index) {\n            item.score -= 1;\n          }\n          return item;\n        })\n      });\n      console.log(\"decr\");\n    } else if (direction === \"increment\") {\n      this.setState({\n        players: this.state.players.map(item => {\n          if (item.id === index) {\n            item.score += 1;\n          }\n          return item;\n        })\n      });\n      console.log(\"incr\");\n    }\n  };\n\n  addPlayer=(name)=>{\n    //gerenereaza un id nou,mai mare cu 1 fata de cel mai mare id existent\n    const uniqueId=()=>1+Math.max(...this.state.players.map(player=>player.id));\n    this.setState(prevState=>( \n      { players: [...prevState.players, {name:name, id:uniqueId(), score: 0}] }\n      )\n    )\n  }; \n\n\n\n\n\n  render() {\n    var largest= 0;\n\n    const myPlayers=this.state.players;\n   \n\n  const max= Math.max.apply(Math, myPlayers.map(function(o) { return o.score; }))\n    console.log(max);\n\n\n    return (\n      <div className=\"App\">\n        <Header\n         players={ this.state.players.length} \n         playersTot={this.state.players}\n         \n         />\n\n        {this.state.players.map((el, index) => (\n          <Player\n            key={el.id.toString()}\n            playerName={el.name}\n            id={el.id}\n            score={el.score}\n            idx={index}\n            changeScore={this.handleScoreChange}\n            myMeth={this.removePlayer}\n            isHighScore={ ()=>{if(el.score===max&&el.score<0)return true;}\n              \n\n            }\n          />\n        ))}\n\n        <AddPlayer \n         addPlayer={this.addPlayer}\n         />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './scoreboard.css'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}